/// <reference types="node" />
import { Serializable } from 'node:child_process';
import { Indomitable } from '../Indomitable';
import { ClusterManager } from '../ClusterManager';
import { Transportable } from '../Util';
export declare class Main {
    readonly cluster: ClusterManager;
    private readonly promises;
    constructor(cluster: ClusterManager);
    get manager(): Indomitable;
    get pending(): number;
    flush(reason: string): void;
    send(transportable: Transportable): Promise<any | undefined>;
    handle(data: Serializable): Promise<boolean | void>;
    private promise;
    private message;
}
//# sourceMappingURL=Main.d.ts.map